# -*- coding: utf-8 -*-
# Generated by Django 1.9 on 2016-04-05 16:04
from __future__ import unicode_literals

from django.db import migrations
from publisher import utils, logic

# stolen from:
# http://stackoverflow.com/questions/21925671/convert-django-model-object-to-dict-with-all-of-the-fields-intact
from django.db.models.fields.related import ManyToManyField
def to_dict(instance):
    opts = instance._meta
    data = {}
    for f in opts.concrete_fields + opts.many_to_many:
        if isinstance(f, ManyToManyField):
            if instance.pk is None:
                data[f.name] = []
            else:
                data[f.name] = list(f.value_from_object(instance).values_list('pk', flat=True))
        else:
            data[f.name] = f.value_from_object(instance)
    return data

def populate(apps, schema_editor):
    "populate the ArticleVersion table with content"
    Article = apps.get_model("publisher", "Article")
    ArticleVersion = apps.get_model("publisher", "ArticleVersion")
    attrs = [
        'doi',
        'version',
        'status',
        'datetime_published',
        'datetime_record_created',
        'datetime_record_updated'
    ]
    for art in Article.objects.all():
        avobj = ArticleVersion(**utils.subdict(to_dict(art), attrs))
        avobj.save()

def depopulate(apps, schema_editor):
    return ArticleVersion.objects.delete()

def prune_articles(apps, schema_editor):
    Article = apps.get_model("publisher", "Article")
    for rawart in logic.not_latest_articles():
        art = Article.objects.get(pk=rawart.id)
        art.delete()

class Migration(migrations.Migration):

    dependencies = [
        ('publisher', '0010_articleversion'),
    ]

    operations = [
        migrations.RunPython(populate, depopulate),
        migrations.RunPython(prune_articles)
    ]
