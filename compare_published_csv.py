#!/bin/env python3
import os
import sys,csv
from datetime import datetime
import json
from collections import OrderedDict

"""
this script compares two 'published.csv' files, typically one generated by Lax and the other generated by hand.
it prints a series of discrepancies in json format to stdout and a report to stderr

"""

if not os.path.exists('lax-published.csv') or not os.path.exists('cmp-published.csv'):
    print('this script expects two files to exist in the same directory it is run from, "lax-published.csv" with the report published.csv report generated by Lax and "cmp-published.csv", the published.csv report to compare it to.')
    exit(0)

def do_csv(fname, fn):
    with open(fname, 'r') as handle:
        rdr = csv.reader(handle)
        for row in rdr:
            yield fn(row)

def err(*args):
    sys.stderr.write(' '.join(map(str, args)) + "\n")
    sys.stderr.flush()

def sep():
    err('-'*3)
    
lax_index = {}
list(do_csv('lax-published.csv', lambda row: lax_index.update({row[0]: row})))
assert len(lax_index) > 1, "asdf"

def mkdt(dtstr):
    return datetime.strptime(dtstr, "%Y-%m-%d")

def check_row(row):
    "checks row against the lax index for discrepancies"
    msid = row[0]
    lax_row = lax_index.get(msid)

    context = OrderedDict([('article', msid), ('type', None), ('lax', lax_row), ('cmp', row)])
    
    if not lax_row:
        # the report being compared has an article lax doesn't have.
        # lax may have:
        # * deliberately excluded it from the report
        context['type'] = 'lax-missing-article'
        return context
    
    if lax_row == row:
        # everything matches :)
        return None

    if lax_row[1] != row[1]:
        # poa date discrepancy
        if lax_row[1] and not row[1]:
            # lax has a poa and the other doesn't
            msg = 'report-missing-poa'
        elif not lax_row[1] and row[1]:
            # report has a poa and lax doesn't
            msg = 'lax-missing-poa'
        else:
            # both have values but the values are different
            laxdt, cmpdt = mkdt(lax_row[1]), mkdt(row[1])
            # lax typically has the earlier date for some reason
            diff = cmpdt - laxdt
            if diff.days == 1:
                msg = "poa-off-by-one"
            else:
                msg = "poa-off-by-many"
            context['diff'] = diff.days
        
        context['type'] = msg
        return context

    if lax_row[2] != row[2]:
        # poa date is ok, but vor date discrepancy
        if lax_row[2] and not row[2]:
            # lax has a poa and the other doesn't
            msg = 'report-missing-vor'
        elif not lax_row[2] and row[2]:
            # report has a poa and lax doesn't
            msg = 'lax-missing-vor'
        else:
            # both have values but the values are different
            laxdt, cmpdt = mkdt(lax_row[2]), mkdt(row[2])
            # lax typically has the earlier date for some reason
            diff = cmpdt - laxdt
            if diff.days == 1:
                msg = "vor-off-by-one"
            else:
                msg = "vor-off-by-many"
            context['diff'] = diff.days

        context['type'] = msg
        return context


report = []
for result in filter(None, do_csv('cmp-published.csv', check_row)):
    report.append(result)
    print(json.dumps(result))
    
groups = {}
for result in report:
    group = groups.get(result['type'], [])
    group.append(result)
    
    groups[result['type']] = group

sep()

for group_type in sorted(groups.keys()):
    err(group_type,len(groups[group_type]))

sep()
